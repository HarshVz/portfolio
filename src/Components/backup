import React, { useEffect, useState } from 'react'
import { Link } from 'react-router-dom';
import axios from 'axios';

const ProjectSection = ({ classList2, isOpen, openModal }) => {

    const [hoveredIndex, setHoveredIndex] = useState(null);
    const [enableImage, setEnableImage] = useState(null)
    const [loader, setLoader] = useState(false);
    const [projects_info, setProjectInfo] = useState(localStorage.getItem('projects') ? JSON.parse(localStorage.getItem('projects')) : []);

    const getProjects = async () => {
        const response = await axios.get(`https://script.google.com/macros/s/AKfycby1m-r4yOZW8fHsJ1ThQgkbLAvourd_NN0fUtP9_bvE_2H4Hwn0q5NZQCwwhGH5IMnO/exec`);
        if (response.status === 200) {
            console.log(response.data);
            setProjectInfo(response.data);
            localStorage.setItem('projects', JSON.stringify(response.data));
        }
    }

    useEffect(() => {
        setLoader(false);
        getProjects();
        setLoader(true);
    }, [])

    const static_projects = [
        {
            title: 'Bookmark Manager',
            description: 'A web app that allows users to save links, scrape metadata, search resources, and generate screenshots.',
            image: 'https://i.imgur.com/Yvvdxtw.png',
            status: 'uploaded',
            url: 'https://toolsbook.vercel.app/',
            users: '10'
        },
        {
            title: 'QuerySpace',
            description: 'A platform where users can create spaces, upload multiple PDFs and URLs, and ask questions based on the uploaded content.',
            image: 'https://i.imgur.com/5T4Bjwj.png',
            status: 'uploaded',
            url: 'https://github.com/HarshVz/QuerySpace',
            users: '8'
        },
        {
            title: 'Medical Report Analysis System',
            description: 'A system to extract, filter, and analyze medical reports from PDFs, displaying important health insights and charts.',
            image: 'NONE',
            status: 'in progress',
            url: 'https://github.com/HarshVz',
            users: '-'
        },
    ];

    const handleMouseEnter = (index) => {
        // setHoveredIndex(index);
        // setEnableImage(index)
    };

    // Handle mouse leave
    const handleMouseLeave = () => {
        // setHoveredIndex(null);
        // setEnableImage(null)
    };



    return (
        <section className={`my-8 grid w-full gap-5 capitalize md:grid-cols-2 md:gap-5 ${classList2}`}>
            <div className="title mb-1 border-b border-b-neutral-700 pb-1 text-neutral-400 capitalize md:col-span-2">Projects</div>





            {(projects_info.length > 0 && projects_info) &&
                (
                    projects_info.map((project, index) => (
                        <article className={`rounded-xl exp1 grid md:col-span-2 md:grid-cols-2 gap-1 mb-2 md:gap-0 transition duration-300 ease-linear blur-none`}
                            key={index}
                            onMouseEnter={() => handleMouseEnter(index)}
                            onMouseLeave={() => handleMouseLeave()}
                            onClick={() => openModal(project)}
                        >
                        {/* {
                                project.image.toLowerCase() !== "none" ? (
                                    <img src={`${project.image.toLowerCase() !== "none" ? project.image : ""}`} className='block md:hidden aspect-video rounded-xl bg-zinc-700 object-cover' alt={project.title} />
                                ) : (
                                    <div className="block md:hidden aspect-video bg-zinc-950 rounded-xl h-full w-full divide-y-2 divide-neutral-700">
                                        <h1 className='w-full h-full p-8 text-3xl'>{project.title}</h1>
                                    </div>
                                )
                            } */}

{/* <img src={`${project.gif}`} className='block md:hidden aspect-video rounded-xl bg-zinc-700 object-cover' alt={project.title} /> */}
{/* {
    project.video.length > 0 ?
    //  <video className='rounded-xl mb-2 block md:hidden aspect-video bg-zinc-700 object-cover' src={`${project.video}`} autoPlay loop muted></video>
    <video className='rounded-xl mb-2 block md:hidden aspect-video bg-zinc-700 object-cover' autoPlay loop muted>
        <source src={`${project.video}`} type="video/mp4"/>
    </video>

     : ""
} */}


                            <div className={`cursor-pointer text-neutral-300 transition duration-300 ease-linear ${project.status.toLowerCase().includes('not') ? " hover:text-red-500" : "hover:text-green-500"} ${project.status.toLowerCase().includes('progress') ? "hover:text-yellow-500" : "hover:text-green-500"}`}>
                                <div className='flex flex-row gap-3 md:gap-3 items-center cursor-pointer'>
                                    <div className={`h-2 w-2 rounded-full ${project.status.toLowerCase().includes('not') ? "bg-red-500 hover:text-red-500" : "bg-green-500 hover:text-green-500"} ${project.status.toLowerCase().includes('progress') ? "bg-yellow-500 hover:text-yellow-500" : "bg-green-500 hover:text-green-500"}`}></div>
                                    <h1 className='flex flex-row'>{project.title} <div className='mx-2 px-3 bg-zinc-800 rounded-full text-sm border-zinc-700 border items-center flex justify-center'>{project.users}</div> </h1>
                                </div>
                                {/* <Link to={project.url} className='flex flex-row gap-3 md:gap-3 items-center'>
                                    <div className={`h-2 w-2 rounded-full ${project.status.toLowerCase().includes('not') ? "bg-red-500 hover:text-red-500" : "bg-green-500 hover:text-green-500"} ${project.status.toLowerCase().includes('progress') ? "bg-yellow-500 hover:text-yellow-500" : "bg-green-500 hover:text-green-500"}`}></div>
                                    <h1 className='flex flex-row'>{project.title} <div className='mx-2 px-3 bg-zinc-800 rounded-full text-sm border-zinc-700 border items-center flex justify-center'>{project.users}</div> </h1>
                                </Link> */}
                            </div>
                            <div className="text-neutral-400 pl-5 md:pl-0">
                                <p>
                                    {project.description}
                                </p>
                            </div>
                        </article>
                    ))
                )
            }

            {/* <div className="title mb-1 border-b border-b-neutral-700 pb-1 text-neutral-400 capitalize md:col-span-2">Previews</div>
                <div className='flex gap-3 md:gap-3 items-center w-full h-full overflow-auto md:col-span-2' id='projectsImageContainer'>
                {(projects_info.length > 0 && projects_info) &&
                    (
                        projects_info.map((project, index) => (
                                <img src={`${project.image.toLowerCase() !== "none" ? project.image : "https://i.pinimg.com/originals/d4/00/dc/d400dccb59f213080d4717aef2d339d1.gif"}`}  alt={project.title} className={`aspect-video object-cover mt-3 w-100 rounded-xl md:col-span-2 h-full`}
                                key={index}
                                />
                        ))
                    )
                }
                </div> */}

        </section>
    )
}

export default ProjectSection
